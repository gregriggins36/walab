apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs"

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

configurations {
    ktlint
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.example.skeleton"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-test.pro'
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'

            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation libs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.11"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
    implementation "com.android.support:support-v4:28.0.0"
    implementation "com.android.support:appcompat-v7:28.0.0"
    implementation "com.android.support:design:28.0.0"
    implementation "com.android.support:customtabs:28.0.0"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha09"
    implementation "android.arch.navigation:navigation-ui-ktx:1.0.0-alpha09"
    //Android Ktx
    implementation "androidx.core:core-ktx:0.3"
    //Firebase
    implementation "com.google.firebase:firebase-core:16.0.6"
    //Dagger 2
    implementation "com.google.dagger:dagger:2.19"
    kapt "com.google.dagger:dagger-compiler:2.19"
    compileOnly "org.glassfish:javax.annotation:10.0-b28"
    //Kombind
    implementation "com.github.ujavid:Kombind:0.5.0"
    //Timber Logging
    implementation "com.github.ajalt:timberkt:1.3.0"
    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:3.11.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.11.0"
    //Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    //RxJava 2
    implementation "io.reactivex.rxjava2:rxjava:2.1.16"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"
    //GSON
    implementation "com.google.code.gson:gson:2.8.4"
    //Glide
    implementation "com.github.bumptech.glide:glide:4.8.0"
    implementation("com.github.bumptech.glide:recyclerview-integration:4.7.1") {
        // Excludes the support library because itâ€™s already included by Glide.
        transitive = false
    }
    kapt "com.github.bumptech.glide:compiler:4.8.0"
    //RecyclerView Dividers
    implementation "com.yqritc:recyclerview-flexibledivider:1.4.0"
    //Ktlint
    ktlint "com.github.shyiko:ktlint:0.15.0"
    // Circle ImageView
    implementation 'de.hdodenhof:circleimageview:2.2.0'


    //Tests
    testImplementation tests.junit.lib
    testImplementation tests.junit.platform
    testImplementation tests.junit.runner
    testImplementation tests.android_support.arch
    testImplementation(tests.spek.lib) {
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation(tests.spek.engine) {
        exclude group: "org.junit.platform"
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation tests.spek.kotlin
    testImplementation tests.hamcrest
    testImplementation tests.mockito.lib
    testImplementation tests.mockito.kotlin
    testImplementation "io.reactivex.rxjava2:rxandroid:2.0.2"


    //UI Tests
    androidTestImplementation tests.android_support.lib
    androidTestImplementation tests.android_support.rules
    androidTestImplementation tests.espresso.lib
    androidTestImplementation(tests.espresso.contrib) {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestImplementation tests.espresso.intents
}

static def buildConfigAndResStringField(variant, name, value) {
    variant.resValue 'string', name.toLowerCase(), value
    variant.buildConfigField 'String', name, "\"$value\""
}

afterEvaluate {
    android.applicationVariants.all { variant ->
        variant.resValue 'string', 'application_id', variant.applicationId
        buildConfigAndResStringField variant, "CONTENT_AUTHORITY", variant.applicationId + ".provider"
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
